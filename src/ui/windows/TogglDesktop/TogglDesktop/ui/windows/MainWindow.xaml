<toggl:TogglWindow x:Class="TogglDesktop.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:toggl="clr-namespace:TogglDesktop"
             mc:Ignorable="d" 
             d:DesignWidth="400"
             Title="Toggl Desktop"
             CanClickIcon="True"
             MouseMove="onWindowMouseMove">

    <Window.Resources>
        <RoutedUICommand x:Key="NewCommand" />
        <RoutedUICommand x:Key="ContinueCommand" />
        <RoutedUICommand x:Key="StopCommand" />
        <RoutedUICommand x:Key="ShowCommand" />
        <RoutedUICommand x:Key="HideCommand" />
        <RoutedUICommand x:Key="SyncCommand" />
        <RoutedUICommand x:Key="ReportsCommand" />
        <RoutedUICommand x:Key="PreferencesCommand" />
        <RoutedUICommand x:Key="ToggleManualModeCommand" />
        <RoutedUICommand x:Key="ClearCacheCommand" />
        <RoutedUICommand x:Key="SendFeedbackCommand" />
        <RoutedUICommand x:Key="AboutCommand" />
        <RoutedUICommand x:Key="LogoutCommand" />
        <RoutedUICommand x:Key="QuitCommand" />

        <RoutedUICommand x:Key="EditRunningCommand" />

        <RoutedUICommand x:Key="EscapeCommand" />
        <RoutedUICommand x:Key="BasicTutorialCommand" />
        <RoutedUICommand x:Key="NewFromPasteCommand" />

        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource PreferencesCommand}" Executed="onPreferencesCommand"/>
        <CommandBinding Command="{StaticResource SendFeedbackCommand}" Executed="onSendFeedbackCommand"/>
        <CommandBinding Command="{StaticResource AboutCommand}" Executed="onAboutCommand"/>
        <CommandBinding Command="{StaticResource QuitCommand}" Executed="onQuitCommand"/>

        <CommandBinding Command="{StaticResource ShowCommand}"
                        Executed="onShowCommand" CanExecute="canExecuteShowCommand"/>
        <CommandBinding Command="{StaticResource HideCommand}"
                        Executed="onHideCommand" CanExecute="canExecuteHideCommand"/>

        <CommandBinding Command="{StaticResource NewCommand}"
                        Executed="onNewCommand" CanExecute="canExecuteNewCommand"/>
        <CommandBinding Command="{StaticResource ContinueCommand}"
                        Executed="onContinueCommand" CanExecute="canExecuteContinueCommand"/>
        <CommandBinding Command="{StaticResource StopCommand}"
                        Executed="onStopCommand" CanExecute="canExecuteStopCommand"/>
        <CommandBinding Command="{StaticResource SyncCommand}"
                        Executed="onSyncCommand" CanExecute="canExecuteSyncCommand"/>
        <CommandBinding Command="{StaticResource ReportsCommand}"
                        Executed="onReportsCommand" CanExecute="canExecuteReportsCommand"/>
        <CommandBinding Command="{StaticResource ToggleManualModeCommand}"
                        Executed="onToggleManualModeCommand" CanExecute="canExecuteToggleManualModeCommand"/>
        <CommandBinding Command="{StaticResource ClearCacheCommand}"
                        Executed="onClearCacheCommand" CanExecute="canExecuteClearCacheCommand"/>
        <CommandBinding Command="{StaticResource LogoutCommand}"
                        Executed="onLogoutCommand" CanExecute="canExecuteLogoutCommand"/>

        <CommandBinding Command="{StaticResource EditRunningCommand}"
                        Executed="onEditRunningCommand" CanExecute="canExecuteEditRunningCommand"/>

        <CommandBinding Command="{StaticResource EscapeCommand}"
                        Executed="onEscapeCommand"/>
        <CommandBinding Command="{StaticResource BasicTutorialCommand}"
                        Executed="onBasicTutorialCommand" CanExecute="canExecuteBasicTutorialCommand"/>
        <CommandBinding Command="{StaticResource NewFromPasteCommand}"
                        Executed="onNewFromPasteCommand" CanExecute="canExecuteNewFromPasteCommand"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{StaticResource NewCommand}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{StaticResource ContinueCommand}" />
        <KeyBinding Key="S" Modifiers="Control" Command="{StaticResource StopCommand}" />
        
        <KeyBinding Key="W" Modifiers="Control" Command="{StaticResource HideCommand}" />
        <KeyBinding Key="R" Modifiers="Control" Command="{StaticResource SyncCommand}" />
        
        <KeyBinding Key="E" Modifiers="Control" Command="{StaticResource EditRunningCommand}" />

        <KeyBinding Key="D" Modifiers="Control" Command="{StaticResource ToggleManualModeCommand}" />
        
        <KeyBinding Key="V" Modifiers="Control" Command="{StaticResource NewFromPasteCommand}" />

        <KeyBinding Key="Escape" Command="{StaticResource EscapeCommand}" />
    </Window.InputBindings>
    
    <Window.ContextMenu>
        <ContextMenu Name="mainContextMenu" x:FieldModifier="private"
                     Closed="onMainContextMenuClosed">
            <ContextMenu.Resources>
                <Style TargetType="MenuItem">
                    <Setter Property="Width" Value="280" />
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="#707070" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                </Style>
            </ContextMenu.Resources>
            <MenuItem IsEnabled="False">
                <MenuItem.Header>
                    <TextBlock Name="emailAddressMenuText"
                               x:FieldModifier="private"
                               Text="your email address"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem IsEnabled="False">
                <MenuItem.Header>
                    <TextBlock Name="runningMenuText"
                               x:FieldModifier="private"
                               Text="Running"/>
                </MenuItem.Header>
            </MenuItem>
            <Separator />
            <MenuItem Header="New" InputGestureText="Ctrl+N"
                      Command="{StaticResource NewCommand}"/>
            <MenuItem Header="Continue" InputGestureText="Ctrl+O"
                      Command="{StaticResource ContinueCommand}"/>
            <MenuItem Header="Stop" InputGestureText="Ctrl+S"
                      Command="{StaticResource StopCommand}"/>
            <Separator />
            <MenuItem Header="Show"
                      Command="{StaticResource ShowCommand}"
                      Visibility=
"{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}"
                      />
            <MenuItem Header="Hide" InputGestureText="Ctrl+W"
                      Command="{StaticResource HideCommand}"
                      Visibility=
"{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}"
                      />
            <Separator />
            <MenuItem Header="Sync" InputGestureText="Ctrl+R"
                      Command="{StaticResource SyncCommand}"/>
            <MenuItem Header="Reports"
                      Command="{StaticResource ReportsCommand}"/>
            <MenuItem Header="Preferences"
                      Command="{StaticResource PreferencesCommand}"/>
            <MenuItem Header="Use manual mode" InputGestureText="Ctrl+D"
                      Name="togglManualModeMenuItem" x:FieldModifier="private"
                      Command="{StaticResource ToggleManualModeCommand}"/>
            <Separator />
            <MenuItem Header="Clear Cache"
                      Command="{StaticResource ClearCacheCommand}"/>
            <MenuItem Header="Toggl Desktop Tutorial"
                      Command="{StaticResource BasicTutorialCommand}"/>
            <MenuItem Header="Send Feedback"
                      Command="{StaticResource SendFeedbackCommand}"/>
            <MenuItem Header="About"
                      Command="{StaticResource AboutCommand}"/>
            <MenuItem Header="Logout"
                      Command="{StaticResource LogoutCommand}"/>
            <MenuItem Header="Quit"
                      Command="{StaticResource QuitCommand}"/>
        </ContextMenu>
    </Window.ContextMenu>
    
    
    <Grid>

        <toggl:TogglChromeDesignTimeConverter Title="Toggl Desktop" />

        <tb:TaskbarIcon x:Name="taskbarIcon" x:FieldModifier="private"
                        TrayLeftMouseUp="onTaskbarLeftMouseUp"
                        TrayBalloonTipClicked="onTrayBalloonTipClicked"
                        Visibility="Collapsed"/>

        <toggl:TimerEntryListView x:Name="timerEntryListView" x:FieldModifier="private" />

        <Grid Name="tutorialPanel" x:FieldModifier="private" />
        
        <toggl:LoginView x:Name="loginView" x:FieldModifier="private"/>

        <toggl:ErrorBar x:Name="errorBar" x:FieldModifier="private"
            VerticalAlignment="Top"/>

        <toggl:StatusBar x:Name="statusBar" x:FieldModifier="private"
                         VerticalAlignment="Bottom"/>

        <Rectangle x:Name="resizeHandle" x:FieldModifier="private"
                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Width="15" Height="15" Cursor="SizeNWSE"
                IsHitTestVisible="True"
                MouseLeftButtonDown="onResizeHandleLeftButtonDown"
                MouseLeftButtonUp="onResizeHandleLeftButtonUp"
                WindowChrome.IsHitTestVisibleInChrome="True">
            <Rectangle.Fill>
                <ImageBrush ImageSource="/TogglDesktop;component/Resources/resize.png"/>
            </Rectangle.Fill>
        </Rectangle>

        <Border Background="{DynamicResource LayoutTestBrush}"
                HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Visibility="Collapsed">
            <CheckBox Click="changeThemeTest" Name="themeCheckBox">Compact mode</CheckBox>
        </Border>
        
    </Grid>
</toggl:TogglWindow>
